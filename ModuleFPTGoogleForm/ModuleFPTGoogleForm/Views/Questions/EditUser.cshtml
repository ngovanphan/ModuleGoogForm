@model MvcGoogleForm.Models.Question

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal" id="addFieldEdit">
        <h4>Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.QuestionId)
        <div class="form-group" hidden>
            @Html.LabelFor(model => model.QuestionId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionId, new { htmlAttributes = new { @class = "form-control QuestionId", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.QuestionName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.QuestionName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.QuestionName, new { htmlAttributes = new { @class = "form-control QuestionName", @disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.QuestionName, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-offset-2 col-md-10">
                <span id="fe_QuestionName" style="color:red;"></span>
            </div>
        </div>
        
        @*<div class="form-group">
                @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
                </div>*@
            <div class="col-md-9">
                <select class="form-control" id="typeOptionEdit" name="typeOption">
                    <option value="Text">Text</option>
                    <option value="Radio">Radio</option>
                </select>

            </div>
        </div>

        <div class="form-group" hidden>
            @Html.LabelFor(model => model.FormId, "FormId", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("FormId", null, htmlAttributes: new { @class = "form-control FormID" })
                @Html.ValidationMessageFor(model => model.FormId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group" id="addAppendEdit">
            @Html.LabelFor(model => model.Answer, htmlAttributes: new { @class = "control-label col-md-2" })
            @*<div class="col-md-10">
                    <input type="text" id="textAnwserEdit1" placeholder="Anwser1" class="text-danger textAnwser1"  />
                    <input type="button" class="btn-success addFiel" value="Add" id="btnAddFieldEdit" />
                </div>*@
            <div class="col-md-10">
                @Html.EditorFor(model => model.Answer, new { htmlAttributes = new { @class = "textAnwserEdit1", @id = "textAnwserEdit1" } })
                @Html.ValidationMessageFor(model => model.Answer, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-offset-2 col-md-10">
                <span id="fe_Anwser" style="color:red;"></span>
            </div>
        </div>

    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="button" value="Save" class="btn btn-success" id="Editsubmit" />
            <input type="button" value="Reset" class="btn btn-danger" id="ResetForm" />
        </div>
    </div>
}

<div>
    <input type="button" id="goBack" value="Back" class="btn btn-link" />
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    var counter = 0;
    var temp2;
    var tempString;
    var khacValue = "";
    var anwser = "";
    var tempKhac="";
    $(document).ready(function () {
        var intType = @ViewBag.Type;
        var temp2 ="";
        var subitem;

        @*var anwserTT = @ViewBag.Anwser;
        var anwserVal = anwserTT.valueOf();
        $("#textAnwserEdit").val() = anwserVal;
        var soAnwser=0;*@

        if(intType == 2)
        {

            document.getElementById('typeOptionEdit').value = 'Radio';

            var temp = $("#textAnwserEdit1").val();
            temp2 = $("#textAnwserEdit1").val();
            var lengthString = temp.length;
            var tempLength = temp.split(";").length;
            
            var checkedInt = temp.indexOf("[");
            tempString = temp.slice(checkedInt-1,temp.length);
            subitem = tempString.slice(2,tempString.length-8);

            tempKhac = temp.slice(0,8);
            if(tempKhac.localeCompare("muckhac_")==0)
            {
                khacValue = temp.slice(8,temp.indexOf(" "));
                temp = temp.slice(temp.indexOf(" ")+1,temp.length);
                var newFiel = document.createElement('div');

                newFiel.innerHTML = "<div class='form-group'>"
                                   +"<div class='col-md-2'></div>"
                                  + "<div class='radio col-md-10'>"
                                  + "<label class='control-label' id='label'>"
                                  + "<input type='radio' name='radio-group' id='radioID' class='radio1' />Mục Khác: </label>"
                                  + "<input type='text' name='valueKhac' id='btnKhacValue' class='text-danger' />"
                                  + "</div>"
                                  + "<div class='col-md-offset-2 col-md-10'>"
                                  + "<span id='fe_MucKhac' style='color:red;'></span>"
                                  + "</div>"
                                  + "</div>"

                $(newFiel).appendTo('#addFieldEdit');
                $("#btnKhacValue").val(khacValue);

            }
            switch (checkedInt) {
                case -1:
                    temp = temp;

                    break;
                default:

                    temp = temp.replace(tempString,"");
                    break;

            }

           // var subString = temp.slice(0,temp.length-1);
            for (var j = 1; j <= tempLength; j++) {
                var firstTempLength = temp.indexOf(";");


                switch (firstTempLength) {
                    case -1:

                        subString = temp.slice(0,temp.length);

                        break;
                    default:
                        subString = temp.slice(0,firstTempLength);


                        temp = temp.replace(temp.slice(0,firstTempLength+2),"");
                        break;

                }


                var newFiel = document.createElement('div');
                counter++;
                newFiel.innerHTML = "<div class='form-group'>"
                                   +"<div class='col-md-2'></div>"
                                  + "<div class='radio col-md-10'>"
                                  + "<label class='control-label' id='label"+j+"'>"
                                  + "<input type='radio' name='radio-group' id='radioID"+j+"' class='radio1' />"+subString+"</label>"
                                  + "</div>";




                $(newFiel).appendTo('#addFieldEdit');

            }

            for (var k = 1; k <= counter; k++) {
                if($("#label"+k).text().localeCompare(subitem)==0)
                {
                    $('input[id=radioID'+k+']').prop('checked',true);
                }
                if(khacValue.localeCompare(subitem)==0)
                {
                    $('input[id=radioID]').prop('checked',true);
                }


            }
            $("#addAppendEdit").html("");

        }


        });


        $("#Editsubmit").click(function(){
            var typeText = $("#typeOptionEdit option:selected").text();
            var idQuestions = @ViewBag.Id;
            var typeInt =1;
            var radiovalue = $(".radio1:checked").parent('label').text();
            var radioId = $(".radio1:checked").parents('label').attr('id');

          //  alert(radiovalue);

            //alert(anwser);
            checkName();
            switch (typeText) {
                case 'Text':
                    typeInt = 1;
                    anwser = anwser + $("#textAnwserEdit1").val();
                    checkText();
                    if(checkName() == true && checkText() == true)
                    {
                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("EditQuestions", "Questions", null)',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({
                                QuestionId: parseInt($(".QuestionId").val()),
                                QuestionName: $(".QuestionName").val(),
                                Answer: anwser,
                                Type: typeInt,
                                FormId: parseInt($(".FormID option:selected").text()),
                                UserId: $(".UserId").val()
                            })

                        });
                        window.location.replace("/Questions/Index/"+parseInt($(".FormID option:selected").text())+"/");
                    }
                    break;
                case 'Radio':
                    typeInt = 2;
                    if(tempKhac.localeCompare("muckhac_")==0)
                    {
                        anwser = "muckhac_"+$("#btnKhacValue").val()+" ";

                    }
                    else
                    {
                        anwser="";
                    }


                    if(radioId.localeCompare("label")==0)
                    {
                        checkMucKhac();

                        for (var i = 1; i <= counter; i++) {
                            if(i==1 && i == counter)
                            {
                                anwser = anwser + $("#label" + i).text();
                            }
                            if(i>=1 && i<counter)
                            {
                                anwser = anwser + $("#label" + i).text() +"; ";
                            }
                            if(i!=1 && i==counter)
                            {
                                anwser = anwser + $("#label" + i).text() + " [" + $("#btnKhacValue").val()+"checked]";
                            }

                        }
                        if(checkMucKhac() == true)
                        {

                            $.ajax({
                                type: 'POST',
                                url: '@Url.Action("EditQuestions", "Questions", null)',
                                contentType: 'application/json; charset=utf-8',
                                data: JSON.stringify({
                                    QuestionId: parseInt($(".QuestionId").val()),
                                    QuestionName: $(".QuestionName").val(),
                                    Answer: anwser,
                                    Type: typeInt,
                                    FormId: parseInt($(".FormID option:selected").text()),
                                    UserId: $(".UserId").val()
                                })

                            });
                            window.location.replace("/Questions/Index/"+parseInt($(".FormID option:selected").text())+"/");
                        }
                    }
                    else
                    {
                        for (var i = 1; i <= counter; i++) {
                            if(i==1 && i == counter)
                            {
                                anwser = anwser + $("#label" + i).text() + " [" + radiovalue+"checked]";
                            }
                            if(i>=1 && i<counter)
                            {
                                anwser = anwser + $("#label" + i).text() +"; ";
                            }
                            if(i!=1 && i==counter)
                            {
                                anwser = anwser + $("#label" + i).text() + " [" + radiovalue+"checked]";
                            }

                        }

                        $.ajax({
                            type: 'POST',
                            url: '@Url.Action("EditQuestions", "Questions", null)',
                            contentType: 'application/json; charset=utf-8',
                            data: JSON.stringify({
                                QuestionId: parseInt($(".QuestionId").val()),
                                QuestionName: $(".QuestionName").val(),
                                Answer: anwser,
                                Type: typeInt,
                                FormId: parseInt($(".FormID option:selected").text()),
                                UserId: $(".UserId").val()
                            })

                        });
                        window.location.replace("/Questions/Index/"+parseInt($(".FormID option:selected").text())+"/");
                    }



                    break;

            }
            //alert("Id: "+idQuestions+" Anwser: "+anwser + "tyep:"+typeInt);




    });
    function checkName()
    {
        if($("#QuestionName").val().length == 0){
            $("#fe_QuestionName").html("*Required");
            return false;
        }
        else
        {
            $("#fe_QuestionName").html("");
            return true;
        }
    }
    function checkText() {
        if ($("#textAnwserEdit1").val().length == 0) {
            $("#fe_Anwser").html("*Required");
            return false;
        }
        else {
            $("#fe_Anwser").html("");

            return true;
        }
    };
    function checkMucKhac(){
        if($("#btnKhacValue").val().length==0)
        {
            $("#fe_MucKhac").html("*Required");
            return false;
        }
        else
        {
            $("#fe_MucKhac").html("");
            return true;
        }

    };
    $("#ResetForm").click(function(){
            window.location.reload();
    });
    $("#goBack").click(function(){
        window.location.replace("/Questions/Index/"+parseInt($(".FormID option:selected").text())+"/");
    });
</script>
